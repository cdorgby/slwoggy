name: Gemini 1.5 Pro Code Review

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  gemini-pro-review:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - uses: actions/github-script@v7
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        with:
          script: |
            const pr = context.payload.pull_request;
            const files = await github.rest.pulls.listFiles({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: pr.number
            });
            
            // Prepare diff with file context
            const diff = files.data.map(f => `# ${f.filename}\n${f.patch || ''}`).join('\n\n').slice(0, 120000);
            
            // Call Gemini for review
            const reviewText = await callGemini(process.env.GEMINI_API_KEY, {
              title: pr.title,
              body: pr.body || '',
              diff
            });
            
            // Post review comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body: reviewText
            });
            
            async function callGemini(apiKey, payload) {
              const response = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent?key=${apiKey}`, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                  system_instruction: {
                    parts: [{
                      text: `You are an expert C++20 systems programmer specializing in high-performance, asynchronous, and header-only libraries for a project named 'slwoggy'. Your review must be critical, direct, and adhere to the project's core design principles.
                      
                      Focus on the following key areas:
                      1. **Performance & Zero-Allocation**: Adherence to the zero-allocation fast path, performance regressions, unnecessary locks, or heap allocations.
                      2. **Concurrency & Thread Safety**: Race conditions, correct memory ordering for atomics (acquire/release), and correct use of lock-free structures.
                      3. **Correctness & Robustness**: Bugs, logic errors, resource leaks (file descriptors), unhandled edge cases, and correct POSIX API error handling.
                      4. **C++20 Best Practices**: Idiomatic use of concepts, ranges, constexpr, etc.
                      5. **API Design & Readability**: Clean and intuitive APIs, maintainability, and structure.
                      
                      Provide your feedback concisely and actionably. Be direct and critical.`
                    }]
                  },
                  contents: [{
                    parts: [{
                      text: `Please review the following pull request.
                      
                      PR Title: ${payload.title}
                      PR Description: ${payload.body}
                      
                      Diff:
                      ${payload.diff}`
                    }]
                  }],
                  generationConfig: {
                    temperature: 0.2,
                    maxOutputTokens: 8192,
                    topP: 0.95,
                    topK: 40
                  }
                })
              });
              
              if (!response.ok) {
                const errorBody = await response.text();
                throw new Error(`Gemini API error: ${response.statusText}. Body: ${errorBody}`);
              }
              
              const data = await response.json();
              const content = data.candidates[0].content.parts[0].text;
              return `## ðŸ”® Gemini 1.5 Pro Code Review\n\n${content}`;
            }